syntax = "proto3";
option optimize_for = LITE_RUNTIME;

package CompanValueTypes;

message UnknownValue {
    bytes value = 1;
}

message BoolValue {
    bool value = 1;
}

message TextValue {
    bytes value = 1;
}

message IntervalValue {
    int32 value = 1;
    int32 min = 2;
    int32 max = 3;
}

message EnumValue {
    message Enumerator {
        int32 value = 1;
        string text = 2;
    }
    repeated Enumerator enumerators = 1;
    int32 value = 2;
}

message UIntervalValue {
    uint32 value = 1;
    uint32 min = 2;
    uint32 max = 3;
}

message ULLIntervalValue {
    uint64 value = 1;
    uint64 min = 2;
    uint64 max = 3;
}

message LLIntervalValue {
    int64 value = 1;
    int64 min = 2;
    int64 max = 3;
}

message SIntervalValue {
    int32 value = 1;
    int32 min = 2;
    int32 max = 3;
}

message USIntervalValue {
    uint32 value = 1;
    uint32 min = 2;
    uint32 max = 3;
}

message DIntervalValue {
    double value = 1;
    double min = 2;
    double max = 3;
}

message AddToContainer {
    string key = 1;
    string value = 2;
}

message RemoveFromContainer {
    string key = 1;
}

message UdidValue {
    uint64 value = 1;
}

message IPv4Value {
    string value = 1;
}

message IPv6Value {
    string value = 1;
}

message EUI48Value {
    uint64 value = 1;
}

message MultiValue {
    string value = 1;
}

message TimeValValue {
    uint64 seconds = 1;
    uint64 microSeconds = 2;
}

message TimeSpecValue {
    uint64 seconds = 1;
    uint64 nanoSeconds = 2;
}

// MapValue contains a list of keys or hints
// The actual values will come down as ValueAdded
// events
message MapValue {
    repeated string keys = 1;
}

message StructValue {
    repeated string keys = 1;
}

// For SetValue, key meaning the value
message SetValue {
    repeated string keys = 1;
}

message UnorderedSetValue {
    repeated string keys = 1;
}

message VectorValue {
    repeated string keys = 1;
}
